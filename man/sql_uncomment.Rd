% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/sql_uncomment.R
\name{sql_uncomment}
\alias{sql_uncomment}
\title{Uncomment comments in SQL statements by tags}
\usage{
sql_uncomment(x, tags = if (!is.null(getOption("sql.tags")))
  getOption("sql.tags") else "", block = TRUE, inline = TRUE)
}
\arguments{
\item{x}{character or sql object; if character, it is first coerced to SQL}

\item{tags}{character; tags that should be uncommenting. The default
is \code{getOption(sql.tags)} or else \code{""} -- all comments are
uncommented.}

\item{block}{logical; uncomment block (/* ... */) comments. Default: TRUE}

\item{inline}{logical; uncomment inline (-- ...) comments. Default: TRUE}
}
\description{
Uncomment comments in SQL statements allowing for specific tagged comments
to change
}
\details{
\code{sql_uncomment} is \strong{not} the same as
\code{\link{sql_strip_comments}} which completely removes comments from a
SQL statement.

\code{sql_uncomment} removes comment delimiters so that comments
that normally skipped will be evaluated by a SQL engine.

By default, \strong{all} comments are uncommented, setting the global
option \code{sql.tag} or passing an argument to \code{tags} will uncomment
only tagged comments.
}
\note{
Todo: Fixes white-space problems related to uncommenting.
}
\section{Tagged Comments}{


Tagged comments allow the user to implement additional functionality
at run-time. This allows queries to be shared by multiple functions.
For example, a query might be used in a bulk operation operating on all
records or an iterative procedure where a subset of records are used.

Comments are uncommeted by tags.  By default, the tag is {{""}}, namely all
comments.  A common case is to have a part of the where clause be for
development.  For example,
{{--dev: AND user_id = 1}} or {{/*dev: AND user_id = 1 */}}.

Comments can be  tagged in the SQL code, by placing the tag as the first
letter type character(s) of the query followed by a colon. For example:

inline: \code{--tag_name:} \cr
block: \code{ /*tag_name: }

A comment can only have one tag.

This interface may change in the future.
}
\examples{
sql <- "SELECT  \\n col a \\n --, col b \\n FROM table"
  sql_uncomment( sql )

  sql <- "SELECT col a /*, col b */ FROM table"
  sql_uncomment( sql )
}
\seealso{
\code{\link{sql}} \cr
  \code{\link{sql_render}} \cr
}

