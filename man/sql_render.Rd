% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/sql_render.R
\name{sql_render}
\alias{sql_render}
\title{Render SQL template}
\usage{
sql_render(sql, data = NULL, tags = "r", strip.comments = FALSE,
  render = TRUE)
}
\arguments{
\item{sql}{character or connection object; Can be path to \code{SQL} file,
raw SQL or a connection object, See \code{\link{read.sql}} for details.}

\item{data}{environment, list or named vector. Locations to search for values
to substitute into the query. The default, \code{NULL} finds the names from
the call stack.}

\item{tags}{character; list of tags to uncomment.  Default: "r"}

\item{strip.comments}{logical; whether to strip comments from sql;
Default: TRUE}

\item{render}{logical; whether to make a template replacement using
\code{whisker.render} (DEFAULT:TRUE)}
}
\value{
character; a SQL statement that can then be passed to a DATABASE
connection
}
\description{
Read SQL and substitute parameters, use tags to allow for programatic
functionality.
}
\details{
\code{sql_render} renders a SQL template by substituting values for the
whisker tags.

Strips tags, renders variables and returns the text.

\code{sql} can either be 1) a connection object 2) a character vector of
length one that is a path to a file on file system or 3) a character
vector containing a SQL statement. The last of these is assumed if the first
two cannot be satisfied.  Both the connection and the file are read using
\code{\link[base]{readLines}}.
In all cases the SQL statements are collapsed to a string (character vector
of length 1) before further processing.

\code{data} can be a list or environment that provides the values to be
substituted.  See \code{whisker.render} for complete details.

When set to \code{FALSE}, \code{render} will prevent rendering of the
template and pass-through the SQL unaltered. This is useful mainly for
debugging.
}
\note{
\code{sql_render} makes no attempt to determine if resulting SQL is valid SQL.
}
\section{Variable Substitution}{


The SQL are rendered it using \code{\link[whisker]{whisker.render}} using the
values provided in \code{data} or the \code{parent.frame} if data is not
provided.
}

\section{Uncommenting}{


Tagged comments allow the user to implement additional functionality
at run-time. This allows queries to be shared by multiple functions.
For example, a query might be used in a bulk operation operating on all
records or an iterative procedure where a subset of records are used.

Comments are uncommeted by tags.  By default, the tag is {{r}}; comments
that have this tag are "uncommented". For example,
{{--r:}} is removed from the file, {{/*r: ... */}} is replaced by {{...}}

This interface may change in the future.


The combination of substitution and uncommenting allows queries to be shared
among a variety of functions.
}
\examples{
sql = "select * from {{table}}"
  table = "table1"
  sql_render( sql )

  table = "table_1"
  sql_render( sql )
  sql_render( "select * from {{table}} --r: where ROWNUM < 10 ")

  # with magrittr:
  \dontrun{
    sql \%>\% sql_render( c( table = "table4" ) )
  }
}
\seealso{
\code{\link{read.sql}} \cr
  \code{\link[whisker]{whisker.render}} \cr
}

