% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql_strip_comments.R
\name{sql_strip_comments}
\alias{sql_strip_comments}
\title{sql_strip_comments}
\usage{
sql_strip_comments(sql, block = TRUE, inline = TRUE, ...)
}
\arguments{
\item{sql}{connection or character;}

\item{block}{logical; strip block (\code{/* ... */}) comments, default: \code{TRUE}}

\item{inline}{logical; strip inline \code{--} comments, default: \code{TRUE}}

\item{...}{additional arguments passed to \code{sql_read}}
}
\description{
Strip comments from a SQL STATEMENT
}
\details{
\code{sql_strip_comments} removes SQL standard comments from a SQL
  statement. Both inline (\code{--}) and block (\code{/* ... */}) style
  comments can be striped independently with the \code{inline} and
  \code{block} arguments, the default is to strip both style of comments.
  \code{block} comments are given priority and will remove any nested
  comments.

  A single space preceding a comment is also stripped.
}
\examples{
  # BLOCK COMMENTS
  sql <- "SELECT name /* User Name */ FROM table"
  sql_strip_comments( sql )

  sql <- "SELECT name /* User \\n Name */ FROM table"
  sql_strip_comments( sql )

  sql <- "SELECT\\n first_name, /* User First Name */\\n last_name /* User Last Name */\\n FROM table"
  sql_strip_comments( sql )

  # INLINE COMMENTS
  sql <- "SELECT -- comment \\n A -- col A \\n from \\n table"
  sql_strip_comments( sql )

}
\seealso{
\code{\link{sql_read}}
}

